// lab9_1
/* Для получения места в общежитии формируется список студентов, который включает ФИО студента, 
группу, средний балл, доход на члена семьи. Общежитие в первую очередь предоставляется тем, 
у кого доход на члена семьи меньше двух минимальных зарплат, затем остальным в порядке уменьшения
среднего балла. Вывести список очередности предоставления мест в общежитии.
*/

#include <iostream> // содержит функции ввода вывода cin, cout
#include<windows.h> //содержит функции SetConsoleCP(), SetConsoleOutputCP()
//#include <fstream>  // подключаем для работы с файлми
using namespace std;
struct struct_student // описываем структуру struct_student включающую фамилию, количество экзаменов, оценки за экзамены
{
	char FIO[60]; //фамилия имя отчество
	int group;	  //количество экзаменов
	float bal;    //средний бал
	int income; //доход на члена семьи
};
//int uspevaemosty(struct_student *ptr) //функция проверяет какие студенты сдали экзамены на 4 и 5, а какие нет 
//{
//	int number=0; 
//	int static in1=0,in2=0; // переменные имеют статический тип памяти, т к должны сохранять значения при выходе из функции
//	for(int i=0;i<ptr->exz;i++) // цикл пробегает по всем оценкам студента
//	{
//		if(ptr->otcenki[i] ==5||ptr->otcenki[i]==4) // проверка сданы ли экзамены на 4 и 5
//		{
//			number++; //переменная считает количество экзаменов сданных на 4 и 5 
//		}
//	}
//	if(number==ptr->exz) //если все экзамены сданы на 4 и 5 выводим фамилию студента
//	{
//		if(in1==0) // один раз выводим заголовок "Следующие студенты сдали экзамены на 4 и 5:"
//		{
//			cout<<endl<<"Следующие студенты сдали экзамены на 4 и 5:"<<endl;
//			in1++; // прибавляем 1 чтобы следующий раз не выводить сообщение
//		}			
//	cout<<ptr->familia<<endl; // выводим фамилию студента
//	return 1; // возращаем значение функции равное 1
//	}
//	else
//	{
//		if(in2==0) // один раз выводим заголовок "Следующие студенты не сдали экзамены на 4 и 5:"
//		{
//			cout<<endl<<"Следующие студенты не сдали экзамены на 4 и 5:"<<endl;
//			in2++; // прибавляем 1 чтобы следующий раз не выводить сообщение
//		}		
//	cout<<ptr->familia<<endl; // выводим фамилию студента
//	return 0; // возращаем значение функции равное 1
//	}
//}
//void print_to_file(int pr)// функция записи в в файл, принимает значение типа int - процен сдавших на 4 и 5
//	{
//    ofstream my_file; // создаем переменную типа ofstream
//    my_file.open("text.txt"); // открываем файл text.txt
//	my_file<<pr<<"% студентов сдало на 4 и 5."; //пишем в файл процент студентов сдавших на 4 и 5
//	my_file.close(); // закрываем файл
//	}
void main()
{
	SetConsoleCP(1251);// установка кодовой страницы win-cp 1251 в поток ввода
    SetConsoleOutputCP(1251); // установка кодовой страницы win-cp 1251 в поток вывода
	/* Для правильного отображения русских символов в консоли нужно выбрать 
	в свойствах консоли шрифт Lucida Console */

	
	
	
//int stud45=0, stud=0; // stud45 - количество студентов сдавших на 4 и 5, stud - количество остальных студентов
//int procent=0; // процент студентов сдавших на 4 и 5
int incom2=12000; // две минимальные зарплаты
char name[10][60]={"Петин Иван Дмитриевич","Халеев Иван Сергеевич","Худякова Антонина Павловна","Шариков Борис Николаевич","Данилин Виктор Иванович","Шакурова Разина Шакуровна",
	"Кузнецова Марина Александровна","Чистякова Тамара Васильевна","Гаврилова Мария Григорьевна","Нефёдова Евдокия Ивановна "}; // Вводим фамилии студентов
int groups[10]={120,121,122,123,124,125,126,127,128,129};
float bals[10]={4.5, 5, 3.2, 4.3, 4.9, 2.8, 3.9, 4 ,3.5, 3.3};
int incomes[10]={10000,15000,7000,20000,4000,25000,8000,15000,9500,1400};
struct_student student[10]; //инициализируем массив структур типа struct_student
//struct_student * ptr_student[10]; // инициализируем массив указателей типа struct_student
for(int i=0;i<10;i++) 
{
//ptr_student[i]=&student[i]; // массиву указателей присваиваем адреса структур, чтобы можно было работать со структурами через указатели в функции uspevaemosty()
strcpy(student[i].FIO,name[i]); // копируем ФИО в структуры
student[i].group=groups[i]; // копируем группы в структуры
student[i].bal=bals[i]; //копируем баллы в структуры
student[i].income=incomes[i]; // копируем доход на члена семьи
}
cout<<"Общежитие в первую очередь предоставляется студентам,"<<endl;
cout<<"у которых доход на члена семьи меньше "<<incom2<<" рублей:"<<endl<<endl;

for(int i=0;i<10;i++)
	{
	if(student[i].income<incom2)
	{
		cout<<student[i].FIO<<endl;
	}

}
cout<<"Остальным в порядке уменьшения среднего балла";	
//
//student[0].otcenki[0]=5; // вводим оценки студентов
//student[0].otcenki[1]=4;
//student[0].otcenki[2]=5;
//student[0].otcenki[3]=5;
//
//student[1].otcenki[0]=4;
//student[1].otcenki[1]=5;
//student[1].otcenki[2]=4;
//student[1].otcenki[3]=5;
//
//student[2].otcenki[0]=5;
//student[2].otcenki[1]=4;
//student[2].otcenki[2]=3;
//student[2].otcenki[3]=4;
//
//student[3].otcenki[0]=4;
//student[3].otcenki[1]=5;
//student[3].otcenki[2]=5;
//student[3].otcenki[3]=5;
//
//student[4].otcenki[0]=5;
//student[4].otcenki[1]=5;
//student[4].otcenki[2]=5;
//student[4].otcenki[3]=5;
//
//for(int i=0;i<5;i++) // пробегаем по всем студентам
//	{
//		if(uspevaemosty(ptr_student[i])==1) // проверяем сдали ли на 4 и 5
//		{
//			stud45++; // считаем студентов сдавших на 4 и 5
//		}
//		else
//		{
//			stud++; // считаем студентов не сдавших на 4 и 5
//		}
//	}
//procent=stud45*100/(stud45+stud); // Вычисляем процент студентов сдавших экзамены на 4 и 5
//cout<<endl<<procent<<"% студентов сдало на 4 и 5"<<endl; //выводим процент студентов сдавших на 4 и 5 
//print_to_file(procent); // функция записивает в файл процент студентов сдавших на 4 и 5 
system("pause"); // команда задержки экрана
}

